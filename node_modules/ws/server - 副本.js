// 加载node上websocket模块 ws;
var ws = require("ws");
var fs = require('fs');
// 启动基于websocket的服务器,监听我们的客户端接入进来。
var server = new ws.Server({ port: 6080 });

function getarr() {
    var getjson;
    fs.readFile('./dc.json', 'utf8', function(err, data) {
        //console.log(data);
        return data;
    });
}

function setware(filename,str) {
    fs.writeFileSync(filename, str, function(err) {
        if (err) console.log('写文件操作失败');
        else console.log('写文件操作成功');
    });
}





function setwarebyid(id,author,isLogicDeleted,parentId,isFolder,title,created,updated,description,courses,status,properties,folderIcon,ifOfficial,vip,price,viewCount,reportCount,pageNum,upCount,rank,version){

id=id||'dagccic-ck8gp40sb00004f74kq8cgfba';
author=author||'4173393';
isLogicDeleted=isLogicDeleted||false;
parentId=parentId||'';
isFolder=isFolder||false;
title=title||'无标题1';
created=created||'2020-04-01T02:12:57.466Z';
updated=updated||'2020-04-01T02:14:58.239Z';
description=description||'';
courses=courses||[];
status=status||0;

properties=properties||{"extension":"","folderMenuStyle":[],"class":[],"styles":{},"userInfo":{"nickname":"","school":""},"icon":{"url":null,"resourceData":{"type":"image/jpeg","name":"无标题1","url":"/api/Resourceimagefrombase64s/nb-science-thumbnail/download/5e83f8daa0abbcf43efde035","owner":"4173393","fileName":"7cb0d900-752c-418d-8336-469022b8d1da.jpeg","container":"nb-science-thumbnail","isDeleted":false,"createDate":"2020-04-01T02:14:54.379Z","updateDate":"2020-04-01T02:14:54.379Z","id":"5e83f8daa0abbcf43efde035"}}};
folderIcon=folderIcon||'assets/img/console/theme/default/defaultbg.png';
ifOfficial=ifOfficial||false;
vip=vip||0;
price=price||0;
viewCount=viewCount||0;
reportCount=reportCount||0;
pageNum=pageNum||0;
upCount=upCount||0;
rank=rank||0;
version=version||1;

var warefile = {"id":id,"author":author,"isLogicDeleted":isLogicDeleted,"parentId":parentId,"isFolder":parentId,"title":title,"created":created,"updated":updated,"description":description,"courses":courses,"status":status,"properties":properties,"folderIcon":folderIcon,"ifOfficial":ifOfficial,"vip":vip,"price":price,"viewCount":viewCount,"reportCount":reportCount,"pageNum":pageNum,"upCount":upCount,"rank":rank,"version":version}


setware(id,JSON.stringify(warefile));


}



function changewarebyid(id,author,isLogicDeleted,parentId,isFolder,title,created,updated,description,courses,status,properties,folderIcon,ifOfficial,vip,price,viewCount,reportCount,pageNum,upCount,rank,version){


var warejson = null;


 warejson = fs.readFileSync(id, 'utf-8');
      warejson = JSON.parse(warejson);


id=id||warejson['id'];
author=author||warejson['author'];
isLogicDeleted=isLogicDeleted||warejson['isLogicDeleted'];
parentId=parentId||warejson['parentId'];
isFolder=isFolder||warejson['isFolder'];
title=title||warejson['title'];
created=created||warejson['created'];
updated=updated||warejson['updated'];
description=description||warejson['description'];
courses=courses||warejson['courses'];
status=status||warejson['status'];

properties=properties||warejson['properties'];
folderIcon=folderIcon||warejson['folderIcon'];
ifOfficial=ifOfficial||warejson['ifOfficial'];
vip=vip||warejson['vip'];
price=price||warejson['price'];
viewCount=viewCount||warejson['viewCount'];
reportCount=reportCount||warejson['reportCount'];
pageNum=pageNum||warejson['pageNum'];
upCount=upCount||warejson['upCount'];
rank=rank||warejson['rank'];
version=version||warejson['version'];

var warefile = {"id":id,"author":author,"isLogicDeleted":isLogicDeleted,"parentId":parentId,"isFolder":parentId,"title":title,"created":created,"updated":updated,"description":description,"courses":courses,"status":status,"properties":properties,"folderIcon":folderIcon,"ifOfficial":ifOfficial,"vip":vip,"price":price,"viewCount":viewCount,"reportCount":reportCount,"pageNum":pageNum,"upCount":upCount,"rank":rank,"version":version}


setware(id,JSON.stringify(warefile));


}







function setwarebypage(id,author,fileId,created,updated,title,sort,properties,version){

id=id||'dagccic-ck8jfn9mm000a4f74vksasf59';
author=author||'4173393';
fileId=fileId||'dagccic-ck8jfn91k00004f74lu9gt0i8';
created=created||'2020-04-01T02:12:57.466Z';
updated=updated||'2020-04-01T02:14:58.239Z';
title=title||'';
sort=sort||1;
properties=properties||{"animateClass":"animated-fast slideInDown","animation":"slide"};
version=version||1;

var warefile = {"id":id,"author":author,"fileId":fileId,"created":created,"updated":updated,"title":title,"sort":sort,"properties":properties,"version":version}


setware(id,JSON.stringify(warefile));


}




function changewarebypage(id,author,fileId,created,updated,title,sort,properties,version){

var warejson = null;


 warejson = fs.readFileSync(id, 'utf-8');
      warejson = JSON.parse(warejson);


id=id||warejson['id'];
author=author||warejson['author'];;
fileId=fileId||warejson['fileId'];;
created=created||warejson['created'];;
updated=updated||warejson['updated'];;
title=title||warejson['title'];;
sort=sort||warejson['sort'];;
properties=properties||warejson['properties'];;
version=version||warejson['version'];;

var warefile = {"id":id,"author":author,"fileId":fileId,"created":created,"updated":updated,"title":title,"sort":sort,"properties":properties,"version":version}


setware(id,JSON.stringify(warefile));


}







function setwarebycomponent(id,fileId,pageId,author,type,template,css,properties,created,updated,version){

id=id||'dagccic-ck8jfpfmw000c4f74tc5mk4ix';
author=author||'4173393';
fileId=fileId||'dagccic-ck8jfn91k00004f74lu9gt0i8';
pageId=pageId||'dagccic-ck8jfn9mm000a4f74vksasf59';
type=type||1;
template=template||null;
created=created||'2020-04-01T02:12:57.466Z';
updated=updated||'2020-04-01T02:14:58.239Z';
css=css||{"width":140,"height":57,"color":"#000000","left":692.2784727977037,"top":186.43671789720946,"zIndex":2,"visibility":""};
properties=properties||{"autoWidth":1,"canEdit":false,"isEditing":false,"template":"<div class=\"text-wrapper\"><p>默认文本</p></div>","animations":[],"styles":{"fontSize":"30px","width":"140px"}};
version=version||1;

var warefile = {"id":id,"fileId":fileId,"pageId":pageId,"author":author,"type":type,"template":template,"css":css,"properties":properties,"created":"2020-04-03T00:12:58.856Z","updated":"2020-04-08T11:19:49.686Z","version":version}

setware(id,JSON.stringify(warefile));


}

function changewarebycomponent(id,fileId,pageId,author,type,template,css,properties,created,updated,version){
	var warejson = null;
    var projson = null;


 warejson = fs.readFileSync(id, 'utf-8');
      warejson = JSON.parse(warejson);
      projson = warejson['properties'];
if (css == null || css == undefined || css == '' || css === undefined) { 
     console.log('css---------------none');
      console.log(warejson);
    css=warejson['css'];
}else{
    css=css;
}

if (properties == null || properties == undefined || properties == '' || properties === undefined) { 
    console.log('properties-------------------nonea');
    console.log(warejson);
    properties=warejson['properties'];
}else{
    console.log('properties-------------------chardata');
    console.log(warejson);
    console.log(properties['chartData']);
// 信息点注入，动态键值。

     if (properties['postype'] == 1 ) { 

        for( var key in properties['poslist'] ){
              console.log(key);
              console.log("projson."+key);
           // eval('projson.'+key);
            eval( "projson."+ key +" ="+JSON.stringify(properties['poslist'][key])+"");
        }
   
    properties = projson;
}else{
    
     properties=warejson['properties'];
}
    

   // if (properties['shapeData'] == null || properties['shapeData'] == undefined || properties['shapeData'] == '' || properties['shapeData'] === undefined) { 
 // properties=warejson['properties'];
//}else{
   // projson['shapeData'] = properties['shapeData'];
   // projson['__SHAPE_DATA_CHANGE__'] = properties['__SHAPE_DATA_CHANGE__'];
   // properties = projson;
//}

}

id=id||warejson['id'];
author=author||warejson['author'];
fileId=fileId||warejson['fileId'];
pageId=pageId||warejson['pageId'];
type=type||warejson['type'];
template=template||warejson['template'];
created=created||warejson['created'];
updated=updated||warejson['updated'];

version=version||warejson['version'];

var warefile = {"id":id,"fileId":fileId,"pageId":pageId,"author":author,"type":type,"template":template,"css":css,"properties":properties,"created":"2020-04-03T00:12:58.856Z","updated":"2020-04-08T11:19:49.686Z","version":version}

setware(id,JSON.stringify(warefile));

	
}


function setarr(str) {
    fs.writeFileSync('./dc.json', str, function(err) {
        if (err) console.log('写文件操作失败');
        else console.log('写文件操作成功');
    });
}
var sktflag;
// 监听接入进来的客户端事件
function websocket_add_listener(client_sock) {
    // close事件
    client_sock.on("close", function() {
        console.log("client close");
    });
    // error事件
    client_sock.on("error", function(err) {
        console.log("client error", err);
    });
    // end 
    // message 事件, data已经是根据websocket协议解码开来的原始数据；
    // websocket底层有数据包的封包协议，所以，绝对不会出现粘包的情况。
    // 每解一个数据包，就会触发一个message事件;
    // 不会出现粘包的情况，send一次，就会把send的数据独立封包。
    // 如果我们是直接基于TCP，我们要自己实现类似于websocket封包协议就可以完全达到一样的效果；
    client_sock.on("message", function(data) {
        var contentText = fs.readFileSync('dc.json', 'utf-8');
        console.log(contentText);
        console.log('aaa----' + contentText + '----aaaa');
        contentText = JSON.parse(contentText);
        var did = '';

        //初始化或读取ScienceCourseware
        var reg = RegExp(/"clientSubscribeData","ScienceCourseware"/);
        if (data.match(reg)) {
            var arrs = data.split(",")[1];
            var s = '';
            var index = data.indexOf("\,");
            var jsonstr = data.substring(index + 1, data.length);
            var index2 = jsonstr.indexOf("\[");
            s = jsonstr.substring(0, index2);
            jsonstr = jsonstr.substring(index2, jsonstr.length);
            console.log('sjjjjjjjjj-----' + jsonstr + '------------------------sjjjjjjjjjjjjjjjjj');
            var jsonarrs = JSON.parse(jsonstr);
            did = jsonarrs[2]['where']['id'];
            sktflag = did;
            console.log(jsonarrs[2]['where']['id']);
            var contentText = fs.readFileSync('dc.json', 'utf-8');
            console.log(contentText);
            console.log('ScienceCourseware----' + contentText + '----ScienceCourseware');
            contentText = JSON.parse(contentText);
            if (data.match(/"id":/)) {

            	console.log('BYBYBYBYBYBYBYBYBYBYBYBYYBYBYBYBID');
                if (contentText.hasOwnProperty(jsonarrs[2]['where']['id'])) {
                    var pageid = contentText[did]['base'];
                } else {
                    console.log('clientSubscribeDataclientSubscribeDataScienceCoursewareScienceCoursewareccccccccccccccccccccccccc');
                    var temparr4 = {};
                    temparr4['page'] = {};
                    temparr4['base'] = {id: jsonarrs[2]['where']['id'], version: 1};
                    temparr4['component'] = {};
                    contentText[jsonarrs[2]['where']['id']] = temparr4;
                    contentText = JSON.stringify(contentText);
                    setarr(contentText);
                    var pageid = jsonarrs[2]['where']['id'];
                }
              

                var ulist = [];


            	 if (contentText.hasOwnProperty(jsonarrs[2]['where']['id'])) {
               
                    
                    ulist.push({
                        id: jsonarrs[2]['where']['id'],
                        "version": 1
                    });
                    console.log('1A1A1A1A1A1A'+x+'A1A1A1A1A1A1A1');
                	
                }


 client_sock.send('43/sync-data/science-coursewares,' + s + '[null,' + JSON.stringify(ulist) + ']');
               
               


            } else {
            	var ulist = [];
console.log('WWWWWWWWWWWWWWWWWWWWWWWWWWWWWELSEWWWWWWWWWWWWWWWWWWWWWWWWWWW');

          
                 for (var x in contentText) {
                    
                    ulist.push(contentText[x]['base']);
                    console.log(x);
            
                }



               
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,' + JSON.stringify(ulist) + ']');
            }
            //console.log(s);
        }




        var reg = RegExp(/"clientSubscribeData","ScienceCoursewarePage"/);
        if (data.match(reg)) {
            var arrs = data.split(",")[1];
            var s = '';
            var index = data.indexOf("\,");
            var jsonstr = data.substring(index + 1, data.length);
            var index2 = jsonstr.indexOf("\[");
            s = jsonstr.substring(0, index2);
            jsonstr = jsonstr.substring(index2, jsonstr.length);
            //console.log(s);
            var jsonarrs = JSON.parse(jsonstr);
            did = jsonarrs[2]['where']['fileId'];
            sktflag = did;
            var contentText = fs.readFileSync('dc.json', 'utf-8');
            console.log(contentText);
            console.log('aaaScienceCoursewarePage----' + contentText + '----ScienceCoursewarePageaaaa');
            contentText = JSON.parse(contentText);
        //    var pageid = contentText[did]['page'];
         

         var ulist = [];

          if (contentText.hasOwnProperty(jsonarrs[2]['where']['fileId'])) {
                for (var x in contentText[did]['page']) {
                    
                    ulist.push(contentText[did]['page'][x]);
                    console.log(contentText[did]['page'][x]);
                }
                }
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,' + JSON.stringify(ulist) + ']');


        }
       
        if (data == '2') {
            client_sock.send('3');
        }
        var reg2 = RegExp(/"clientSubscribeData","ScienceCoursewareComponent"/);
        if (data.match(reg2)) {
            var arrs = data.split(",")[1];
            var s = '';
            var index = data.indexOf("\,");
            var jsonstr = data.substring(index + 1, data.length);
            var index2 = jsonstr.indexOf("\[");
            s = jsonstr.substring(0, index2);
                        jsonstr = jsonstr.substring(index2, jsonstr.length);
            //console.log(s);
            var jsonarrs = JSON.parse(jsonstr);
            did = jsonarrs[2]['where']['fileId'];
            sktflag = did;
            var contentText = fs.readFileSync('dc.json', 'utf-8');
            console.log(contentText);
            console.log('aaaScienceCoursewarePage----' + contentText + '----ScienceCoursewarePageaaaa');
            contentText = JSON.parse(contentText);
            var ulist = [];
             if (contentText.hasOwnProperty(jsonarrs[2]['where']['fileId'])) {
                for (var x in contentText[did]['component']) {
                    
                    ulist.push(contentText[did]['component'][x]);
                    console.log(x);
                }
                }
                  client_sock.send('43/sync-data/science-coursewares,' + s + '[null,' + JSON.stringify(ulist) + ']');

        }

        var regce = RegExp(/"clientDataChanged"/);
        if (data.match(regce)) {
            var regcereg = RegExp(/"ScienceCourseware"/);
            var regcebase = RegExp(/"baseVersion":0/);
            if (data.match(regcereg)) {
                if (data.match(regcebase)) {
                    if (data.match(/"obj"/)) {
                        var arrs = data.split(",")[1];
                        var s = '';
                        var index = data.indexOf("\,");
                        var jsonstr = data.substring(index + 1, data.length);
                        var index2 = jsonstr.indexOf("\[");
                        s = jsonstr.substring(0, index2);
                        jsonstr = jsonstr.substring(index2, jsonstr.length);
                        console.log('aaaa----------');
                        console.log(jsonstr);
                        var jsonarrs = JSON.parse(jsonstr);
                        console.log('aaa----' + jsonarrs[1]['key'] + '----aaaa');
                        if (contentText.hasOwnProperty(jsonarrs[1]['key'])) {
                            console.log('alive ----------------- alive');
                            //console.log('ppppp----' + contentText[jsonarrs[1]['key']] + '----ppppp');
                            // contentText[jsonarrs[1]['obj']['fileId']]['page'][jsonarrs[1]['obj']['id']] = JSON.stringify(jsonarrs[1]);
                            // contentText = JSON.stringify(contentText);
                            // setarr(contentText);
                        } else {
                            console.log('aaa----elseelseelse----aaaa');
                            console.log('HHHHHHHHHHHHHHHH----' + contentText[jsonarrs[1]['key']] + '----HHHHHHHHHHHHHHHHHHHHHH');
                            var objarray = {};
                            objarray['page'] = {};
                            objarray['base'] = {id: jsonarrs[1]['key'], version: 1};
                            objarray['component'] = {};
                            //temparrobj[base] = 'aaaaaaaaaaaaaaaaaaaaaaaaa';
                            //temparrobj[component] = []; 
                            //var temparr = [['component', []], ['base', jsonarrs[1]['obj']['fileId']], ['page', []]];
                            console.log('tttttttttttttttttttttttttttttttttttttttt----' + JSON.stringify(objarray) + '-----------tttttttttttttttttttttttttttttttttttttttttttttttt');
                     

                            contentText[jsonarrs[1]['key']] = objarray;
                            //    contentText = JSON.stringify(contentText);
                            console.log('allallallallallallallallall----' + JSON.stringify(contentText) + '-----------allallallallallallallall');
                            setarr(JSON.stringify(contentText));
                            setwarebyid(jsonarrs[1]['key'],jsonarrs[1]['obj']['author'],jsonarrs[1]['obj']['isLogicDeleted'],jsonarrs[1]['obj']['parentId'],jsonarrs[1]['obj']['isFolder'],jsonarrs[1]['obj']['title'],jsonarrs[1]['obj']['isLogicDeleted'],jsonarrs[1]['obj']['created'],jsonarrs[1]['obj']['updated'],jsonarrs[1]['obj']['description'],jsonarrs[1]['obj']['courses'],jsonarrs[1]['obj']['status'],jsonarrs[1]['obj']['properties'],jsonarrs[1]['obj']['folderIcon'],jsonarrs[1]['obj']['ifOfficial'],jsonarrs[1]['obj']['vip'],jsonarrs[1]['obj']['price'],null,jsonarrs[1]['obj']['pageNum'],null,null,jsonarrs[1]['obj']['_local_version']);
                        }
                        console.log(jsonarrs[1]['obj']['_local_version']);
                        did = jsonarrs[1]['obj']['_local_version'];
                        client_sock.send('43/sync-data/science-coursewares,' + s + '[null,{"version":' + did + '}]');
                    }
                }
            }
        }
        var regce2 = RegExp(/"clientDataChanged"/);
        if (data.match(regce2)) {
            var regcereg2 = RegExp(/"mods"/);
            //var regcebase2 = RegExp(/"baseVersion":2/);	
            //if(data.match(regcebase2)){
            if (data.match(regcereg2)) {
                var arrs = data.split(",")[1];
                var s = '';
                var index = data.indexOf("\,");
                var jsonstr = data.substring(index + 1, data.length);
                var index2 = jsonstr.indexOf("\[");
                s = jsonstr.substring(0, index2);
                jsonstr = jsonstr.substring(index2, jsonstr.length);
                console.log('aaaa----------');
                console.log(jsonstr);
                var jsonarrs = JSON.parse(jsonstr);
                console.log(jsonarrs[1]['mods']['_local_version']);
                did = jsonarrs[1]['mods']['_local_version'];
                //console.log(jsonarrs[1]['mods']['_local_version']);
                if (data.match(/"ScienceCourseware"/)) {
                    sktflag = jsonarrs[1]['key'];
                    console.log('bbbbbbbbbbbbScienceCourseware' + sktflag + 'bbbbbbbbbbbbbbbb');
                    var contentText = fs.readFileSync('dc.json', 'utf-8');
                    console.log(contentText);
                    console.log('aaa----' + contentText + '----aaaa');
                    console.log('cccccc----' + sktflag + '----ccccc');
                    contentText = JSON.parse(contentText);
                    var savejson = {
                        id: '' + jsonarrs[1]['key'] + '',
                        version: parseInt(did)
                    };
                    if (contentText.hasOwnProperty(jsonarrs[1]['key'])) {
                        contentText[jsonarrs[1]['key']]['base'] = {id: jsonarrs[1]['key'], version: parseInt(did)};
                        contentText = JSON.stringify(contentText);
                        setarr(contentText);
                        changewarebyid(jsonarrs[1]['key'],null,null,null,null,jsonarrs[1]['mods']['title'],null,jsonarrs[1]['mods']['updated'],null,null,null,null,null,null,null,null,null,null,null,null,null,jsonarrs[1]['mods']['_local_version'])

                    } else {
                        var temparr1 = new Array();
                        temparr1['page'] = new Array();
                        temparr1['base'] = {id: jsonarrs[1]['key'], version: parseInt(did)};
                        temparr1['component'] = new Array();
                        //var temparr = [['component', []], ['base', jsonarrs[1]['obj']['fileId']], ['page', []]];
                        temparr1['page'][jsonarrs[1]['key']] = JSON.stringify(jsonarrs[1]);
                        contentText[jsonarrs[1]['key']] = temparr1;
                        contentText = JSON.stringify(contentText);
                        setarr(contentText);


                        changewarebyid(jsonarrs[1]['key'],null,null,null,null,jsonarrs[1]['mods']['title'],null,jsonarrs[1]['mods']['updated'],null,null,null,null,null,null,null,null,null,null,null,null,null,jsonarrs[1]['mods']['_local_version'])

                        //   contentText[jsonarrs[1]['key']] = temparr;
                        //  contentText = JSON.stringify(contentText);
                        //  setarr(contentText);
                    }
                    //   contentText[sktflag]['base'] = savejson;
                    //   contentText = JSON.stringify(contentText)
                    //   setarr(contentText);
                }
                if (data.match(/"ScienceCoursewareComponent"/)) {
                    console.log('ffffffffffbbbbbbScienceCoursewareComponent' + sktflag + 'ffffffffffffff');
                    var contentText = fs.readFileSync('dc.json', 'utf-8');
                    console.log(contentText);
                    console.log('aaa----' + contentText + '----aaaa');
                    console.log('ffffffffffffffffff----' + sktflag + '----fffffffffffffffffffff');
                    contentText = JSON.parse(contentText);
                    console.log(contentText);
                    if (contentText.hasOwnProperty(sktflag)) {
                     contentText[sktflag]['component'][jsonarrs[1]['key']] = {id: jsonarrs[1]['key'], version: jsonarrs[1]['mods']['_local_version']};
                    //contentText[sktflag]['component']=jsonarrs[1]['key'];
                    contentText = JSON.stringify(contentText);
                    setarr(contentText);

                   // if (jsonarrs[1]['mods']['properties.chartData'] == null || jsonarrs[1]['mods']['properties.chartData'] == undefined || jsonarrs[1]['mods']['properties.chartData'] == '' || jsonarrs[1]['mods']['properties.chartData'] === undefined) { 
                    //     console.log('vpppppppppppppppppppppp-------if---------'+jsonarrs[1]['mods']['properties.chartData']+'vppppppppppppppppppppppppppppppp-');
                    //}else{
                   //     jsonarrs[1]['mods']['properties'] = {};
                    //    jsonarrs[1]['mods']['properties']['chartData'] = jsonarrs[1]['mods']['properties.chartData'];
                     //   jsonarrs[1]['mods']['properties']['__chart_data_change__'] = true;
                        
                        
                      //    console.log('vpppppppppppppppppppppp------1----------'+jsonarrs[1]['mods']['properties.chartData']+'vppppppppppppppppppppppppppppppp-');
                     //    console.log('vpppppppppppppppppppppp--------2--------'+jsonarrs[1]['mods']['properties']+'vppppppppppppppppppppppppppppppp-');
                 //   }
//
                   //  if (jsonarrs[1]['mods']['properties.url'] == null || jsonarrs[1]['mods']['properties.url'] == undefined || jsonarrs[1]['mods']['properties.url'] == '' || jsonarrs[1]['mods']['properties.url'] === undefined) { 
                   //      console.log('vpppppppppppppppppppppp-------if---------'+jsonarrs[1]['mods']['properties.url']+'vppppppppppppppppppppppppppppppp-');
                   // }else{
                    //    jsonarrs[1]['mods']['properties'] = {};
                    //    jsonarrs[1]['mods']['properties']['url'] = jsonarrs[1]['mods']['properties.url'];
                     
                        
                        
                     //     console.log('vpppppppppppppppppppppp------url----------'+jsonarrs[1]['mods']['properties.url']+'vppppppppppppppppppppppppppppppp-');
                     //    console.log('vpppppppppppppppppppppp--------url--------'+jsonarrs[1]['mods']['properties']+'vppppppppppppppppppppppppppppppp-');
                   // }

                    // if (jsonarrs[1]['mods']['properties.shapeData'] == null || jsonarrs[1]['mods']['properties.shapeData'] == undefined || jsonarrs[1]['mods']['properties.shapeData'] == '' || jsonarrs[1]['mods']['properties.shapeData'] === undefined) { 
                    //     console.log('vpppppppppppppppppppppp-------properties.shapeData---------'+jsonarrs[1]['mods']['properties.shapeData']+'vppppppppppppppppppppppppppppppp-');
                   // }else{
                    //    jsonarrs[1]['mods']['properties'] = {};
                     //   jsonarrs[1]['mods']['properties']['shapeData'] = jsonarrs[1]['mods']['properties.shapeData'];
                     //   jsonarrs[1]['mods']['properties']['__SHAPE_DATA_CHANGE__'] = true;

                        
                        //  console.log('vpppppppppppppppppppppp------url----------'+jsonarrs[1]['mods']['properties.shapeData']+'vppppppppppppppppppppppppppppppp-');
                      //   console.log('vpppppppppppppppppppppp--------url--------'+jsonarrs[1]['mods']['properties']+'vppppppppppppppppppppppppppppppp-');
                 //   }





var reg = RegExp(/properties\./);
var poslist = {};
var postype = 0;
        for( var key in jsonarrs[1]['mods'] ){
   if(reg.exec(key)){
    var keydemo = key.replace(/\.([0-9])\./ig,"[$1].");
    poslist[keydemo.substring(keydemo.indexOf('.') + 1, keydemo.length)] = jsonarrs[1]['mods'][key];
    postype =1;
    // 包含        
}
   
}
if(postype==1){
    jsonarrs[1]['mods']['properties'] = {};
    jsonarrs[1]['mods']['properties']['postype'] = 1;
    jsonarrs[1]['mods']['properties']['poslist'] = poslist;
}


                   


                    changewarebycomponent(jsonarrs[1]['key'],null,null,null,null,jsonarrs[1]['mods']['template'],jsonarrs[1]['mods']['css'],jsonarrs[1]['mods']['properties'],null,jsonarrs[1]['mods']['updated'],jsonarrs[1]['mods']['_local_version'])
                    // changewarebycomponent(jsonarrs[1]['key'],null,null,null,null,jsonarrs[1]['mods']['template'],jsonarrs[1]['mods']['css'],jsonarrs[1]['mods']['properties'],null,jsonarrs[1]['mods']['updated'],jsonarrs[1]['mods']['_local_version'])
                    }
                }
                if (data.match(/"ScienceCoursewarePage"/)) {
                    console.log('bbbbbbbbbbbbScienceCoursewarePage' + sktflag + 'bbbbbbbbbbbbbbbb');
                    var contentText = fs.readFileSync('dc.json', 'utf-8');
                    console.log(contentText);
                    console.log('aaa----' + contentText + '----aaaa');
                    console.log('cccccc----' + sktflag + '----ccccc');
                    contentText = JSON.parse(contentText);
                  if (contentText.hasOwnProperty(sktflag)) {
                    contentText[sktflag]['page'][jsonarrs[1]['key']] = {id: jsonarrs[1]['key'], version: jsonarrs[1]['mods']['_local_version']};
                    contentText = JSON.stringify(contentText);
                    setarr(contentText);

                    changewarebypage(jsonarrs[1]['key'],null,null,null,jsonarrs[1]['mods']['updated'],null,null,null,jsonarrs[1]['mods']['_local_version'])

                }
                }
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,{"version":' + did + '}]');
                //  } 
            }
        }
        //42/sync-data/science-coursewares,4["clientDataChanged",{"key":"dagccic-ck8ioiv9p00064f746881yn7y","baseVersion":0,"source":null,"table":"ScienceCoursewarePage","type":1,"obj":{"author":"4173393","fileId":"dagccic-ck8ioiumh00004f748vm24s5r","sort":1,"updated":"2020-04-02T11:32:02.892Z","created":"2020-04-02T11:32:02.892Z","version":0,"_local_version":1,"_sync_version":0,"id":"dagccic-ck8ioiv9p00064f746881yn7y","title":"","properties":{"animateClass":"animated-fast slideInDown","animation":"slide"}},"isUploading":1,"userId":"4173393","rev":65}]
        var regv = RegExp(/"table":"ScienceCoursewarePage"/);
        if (data.match(regv)) {
            if (!data.match(/"mods"/)) {
                if (data.match(/"obj"/)) {
                    var arrs = data.split(",")[1];
                    var s = arrs.substr(0, 1);
                    var index = data.indexOf("\,");
                    var jsonstr = data.substring(index + 1, data.length);
                    var index2 = jsonstr.indexOf("\[");
                    s = jsonstr.substring(0, index2);
                    jsonstr = jsonstr.substring(index2, jsonstr.length);
                    console.log('aaaa----------');
                    console.log(jsonstr);
                    //var jsonarrs = JSON.parse(jsonstr);
                    var jsonarrs = JSON.parse(jsonstr);
                    console.log(jsonarrs[1]['obj']['_local_version']);
                    did = jsonarrs[1]['obj']['_local_version'];
                    //sktflag = jsonarrs[2]['where']['fileId'];
                    //console.log(jsonarrs[2]['where']['fileId']);
                    var contentText = fs.readFileSync('dc.json', 'utf-8');
                    console.log(contentText);
                    console.log('aaa----' + contentText + '----aaaa');
                    console.log('dddddddddddddd----' + sktflag + '----dddddddddddddd');
                    contentText = JSON.parse(contentText);
                    var savejson = [{
                        id: '' + jsonarrs[1]['key'] + '',
                        version: '' + did + ''
                    }];
                    if (contentText.hasOwnProperty(jsonarrs[1]['obj']['fileId'])) {
                        console.log('ppppppppppp----' + contentText[jsonarrs[1]['obj']['fileId']]['page'] + '----pppppppppp');
                        contentText[jsonarrs[1]['obj']['fileId']]['page'][jsonarrs[1]['obj']['id']] = {id: jsonarrs[1]['obj']['id'], version: jsonarrs[1]['obj']['_local_version']};
                        contentText = JSON.stringify(contentText);
                        setarr(contentText);
                        setwarebypage(jsonarrs[1]['obj']['id'],jsonarrs[1]['obj']['author'],jsonarrs[1]['obj']['fileId'],jsonarrs[1]['obj']['created'],jsonarrs[1]['obj']['updated'],jsonarrs[1]['obj']['title'],jsonarrs[1]['obj']['sort'],jsonarrs[1]['obj']['properties'],jsonarrs[1]['obj']['_local_version'])
                    } else {
                        temparr2 = {};
                        temparr2['page'] = {};
                        temparr2['base'] = jsonarrs[1]['obj']['fileId'];
                        temparr2['component'] = {};
                        //var temparr = [['component', []], ['base', jsonarrs[1]['obj']['fileId']], ['page', []]];
                        temparr2['page'][jsonarrs[1]['obj']['id']] = {id: jsonarrs[1]['obj']['id'], version: jsonarrs[1]['obj']['_local_version']};
                        console.log('pppppppppaaaaaaaaaa' + temparr2 + 'ppppppppaaaaaaaaa');
                        contentText[jsonarrs[1]['obj']['fileId']] = temparr2;
                        contentText = JSON.stringify(contentText);
                        setarr(contentText);
                        setwarebypage(jsonarrs[1]['obj']['id'],jsonarrs[1]['obj']['author'],jsonarrs[1]['obj']['fileId'],jsonarrs[1]['obj']['created'],jsonarrs[1]['obj']['updated'],jsonarrs[1]['obj']['title'],jsonarrs[1]['obj']['sort'],jsonarrs[1]['obj']['properties'],jsonarrs[1]['obj']['_local_version'])
                    }
                    console.log(s);
                    client_sock.send('43/sync-data/science-coursewares,' + s + '[null,{"version":1}]');
                }
            }
        }
        var regCom = RegExp(/"table":"ScienceCoursewareComponent"/);
        if (data.match(regCom)) {
            if (!data.match(/"mods"/)) {
                if (data.match(/"obj"/)) {
                    var arrs = data.split(",")[1];
                    var s = arrs.substr(0, 1);
                    var index = data.indexOf("\,");
                    var jsonstr = data.substring(index + 1, data.length);
                    var index2 = jsonstr.indexOf("\[");
                    s = jsonstr.substring(0, index2);
                    jsonstr = jsonstr.substring(index2, jsonstr.length);
                    console.log('ffffffffffffffffff----------');
                    console.log(jsonstr);
                    //var jsonarrs = JSON.parse(jsonstr);
                    var jsonarrs = JSON.parse(jsonstr);
                    console.log(jsonarrs[1]['obj']['_local_version']);
                    did = jsonarrs[1]['obj']['_local_version'];
                    //sktflag = jsonarrs[2]['where']['fileId'];
                    //console.log(jsonarrs[2]['where']['fileId']);
                    var contentText = fs.readFileSync('dc.json', 'utf-8');
                    console.log(contentText);
                    console.log('aaa----' + contentText + '----aaaa');
                    console.log('dddddddddddddd----' + sktflag + '----dddddddddddddd');
                    contentText = JSON.parse(contentText);
                    var savejson = [{
                        id: '' + jsonarrs[1]['key'] + '',
                        version: '' + did + ''
                    }];
                    if (contentText.hasOwnProperty(jsonarrs[1]['obj']['fileId'])) {
                        contentText[jsonarrs[1]['obj']['fileId']]['component'][jsonarrs[1]['obj']['id']] = {id: jsonarrs[1]['obj']['id'], version: jsonarrs[1]['obj']['_local_version']};
                        contentText = JSON.stringify(contentText);
                        setarr(contentText);
                        setwarebycomponent(jsonarrs[1]['obj']['id'],jsonarrs[1]['obj']['fileId'],jsonarrs[1]['obj']['pageId'],jsonarrs[1]['obj']['author'],jsonarrs[1]['obj']['type'],jsonarrs[1]['obj']['template'],jsonarrs[1]['obj']['css'],jsonarrs[1]['obj']['properties'],jsonarrs[1]['obj']['created'],jsonarrs[1]['obj']['updated'],jsonarrs[1]['obj']['_local_version'])
                    } else {
                        var temparr3 = {};
                        temparr3['page'] = {};
                        temparr3['base'] = jsonarrs[1]['obj']['fileId'];
                        temparr3['component'] = {};
                        temparr3['component'][jsonarrs[1]['obj']['id']] = {id: jsonarrs[1]['obj']['id'], version: jsonarrs[1]['obj']['_local_version']};
                  
                        contentText[jsonarrs[1]['obj']['fileId']] = temparr3;
                        contentText = JSON.stringify(contentText);
                        setarr(contentText);
                        setwarebycomponent(jsonarrs[1]['obj']['id'],jsonarrs[1]['obj']['fileId'],jsonarrs[1]['obj']['pageId'],jsonarrs[1]['obj']['author'],jsonarrs[1]['obj']['type'],jsonarrs[1]['obj']['template'],jsonarrs[1]['obj']['css'],jsonarrs[1]['obj']['properties'],jsonarrs[1]['obj']['created'],jsonarrs[1]['obj']['updated'],jsonarrs[1]['obj']['_local_version'])
                    }
                    //contentText[jsonarrs[1]['obj']['fileId']]['page'] = savejson;
                    //	contentText = JSON.stringify(contentText);
                    //setarr(contentText);
                    console.log(s);
                    client_sock.send('43/sync-data/science-coursewares,' + s + '[null,{"version":1}]');
                }
            }
        }
        var regb = RegExp(/"baseVersion":1/);
        if (data.match(regb)) {
            if (!data.match(/"mods"/)) {
                var arrs = data.split(",")[1];
                var s = arrs.substr(0, 1);
                console.log(s);
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,{"version":2}]');
            }
        }


        var regbyid = RegExp(/"clientRequestFullDataById","ScienceCourseware"/);
        if (data.match(regbyid)) {
            console.log('runbbbbbbbbbbbbbbbbbbbbbbbbyyyyyyyyyyyyyyyyyyyyyyyyyyyyyid');
                   var arrs = data.split(",")[1];
                    var s = arrs.substr(0, 1);
                    var index = data.indexOf("\,");
                    var jsonstr = data.substring(index + 1, data.length);
                    var index2 = jsonstr.indexOf("\[");
                    s = jsonstr.substring(0, index2);
                    jsonstr = jsonstr.substring(index2, jsonstr.length);

                     var jsonarrs = JSON.parse(jsonstr);
                    var warejson = null;

                    warejson = fs.readFileSync(jsonarrs[2], 'utf-8');
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,'+warejson+']');
          
        }




 var regbyidpage = RegExp(/"clientRequestFullDataById","ScienceCoursewarePage"/);
        if (data.match(regbyidpage)) {
            console.log('runbbbbbbbbbbbbbbbbbbbbbbbbyyyyyyyyyyyyyyyyyyyyyyyyyyyyyid');
                   var arrs = data.split(",")[1];
                    var s = arrs.substr(0, 1);
                    var index = data.indexOf("\,");
                    var jsonstr = data.substring(index + 1, data.length);
                    var index2 = jsonstr.indexOf("\[");
                    s = jsonstr.substring(0, index2);
                    jsonstr = jsonstr.substring(index2, jsonstr.length);

                     var jsonarrs = JSON.parse(jsonstr);
                    var warejson = null;
                   // warejson = '{"id":"dagccic-ck8r6jkz8000h4f74vg4akfmi","author":"4173393","fileId":"dagccic-ck8jxpocn00004f747up3gmfr","created":"2020-04-08T10:18:38.708Z","updated":"2020-04-08T10:18:48.711Z","title":"","sort":2,"properties":{"__courseware_theme_bg_color__":"#fff","__courseware_theme_bg_image__":"none","animateClass":"animated-fast slideInDown","animation":"slide","styles":{"backgroundColor":"#fff","backgroundImage":"none"}},"version":4}';
                   warejson = fs.readFileSync(jsonarrs[2], 'utf-8');
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,'+warejson+']');
          
        }





 var regbyidcom = RegExp(/"clientRequestFullDataById","ScienceCoursewareComponent"/);
        if (data.match(regbyidcom)) {
            console.log('runbbbbbbbbbbbbbbbbbbbbbbbbyyyyyyyyyyyyyyyyyyyyyyyyyyyyyid');
                   var arrs = data.split(",")[1];
                    var s = arrs.substr(0, 1);
                    var index = data.indexOf("\,");
                    var jsonstr = data.substring(index + 1, data.length);
                    var index2 = jsonstr.indexOf("\[");
                    s = jsonstr.substring(0, index2);
                    jsonstr = jsonstr.substring(index2, jsonstr.length);

                     var jsonarrs = JSON.parse(jsonstr);
                    var warejson = null;
                   // warejson = '{"id":"dagccic-ck8r6jp51000i4f74jlrlsjum","fileId":"dagccic-ck8jxpocn00004f747up3gmfr","pageId":"dagccic-ck8r6jkz8000h4f74vg4akfmi","author":"4173393","type":1,"template":null,"css":{"width":140,"height":57,"color":"#000000","left":175.97938202711913,"top":94.59278334946924,"zIndex":1,"visibility":""},"properties":{"autoWidth":1,"canEdit":false,"isEditing":false,"template":"<div class=\"text-wrapper\"><p>默认文本</p></div>","animations":[],"styles":{"fontSize":"30px","width":"140px"}},"created":"2020-04-08T10:18:44.101Z","updated":"2020-04-08T10:18:46.144Z","version":2}';
                    warejson = fs.readFileSync(jsonarrs[2], 'utf-8');
                client_sock.send('43/sync-data/science-coursewares,' + s + '[null,'+warejson+']');
          
        }




        
        console.log(data);
        if (data == '40/sync-data/science-coursewares?uid=4173393&companyId=&token=rKIKH3E0UOUahwLCAuxhC9rKZTybzcZAcUEUe5Q9,') {
            client_sock.send('40');
            client_sock.send('40/sync-data/science-coursewares,');
        }
    });
    // end 
}
// connection 事件, 有客户端接入进来;
function on_server_client_comming(client_sock) {
    console.log("client comming");
    client_sock.send('0{"sid":"td31bCNvX-sKpQS3AM7v","upgrades":[],"pingInterval":25000,"pingTimeout":5000}');
    websocket_add_listener(client_sock);
}
server.on("connection", on_server_client_comming);
console.log('client connected');
// error事件,表示的我们监听错误;
function on_server_listen_error(err) {
    console.log(err);
}
server.on("error", on_server_listen_error);
// headers事件, 回给客户端的字符。
function on_server_headers(data) {
    // console.log(data);
}
server.on("headers", on_server_headers);